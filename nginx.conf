# Nginx configuration for video-consumer application
# Place this file in /etc/nginx/conf.d/video-consumer.conf

server {
    listen 80;
    server_name _;
    
    # Set maximum file upload size
    client_max_body_size 500M;
    
    # Main site
    root /path/to/video-consumer/frontend-app;
    
    # Serve static files from frontend-app
    location / {
        try_files $uri $uri/ /index.html;
        
        # Basic cache control
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }
    
    # Proxy API requests to Node.js backend
    location /api/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Content-Disposition,Accept-Ranges' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,Range';
            add_header 'Access-Control-Max-Age' 86400;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # Proxy health check endpoint
    location /health {
        proxy_pass http://localhost:3001/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Special configuration for HLS streaming files
    location ~ \.(m3u8|ts)$ {
        root /path/to/video-consumer/uploads;
        
        # Essential CORS headers for streaming
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Content-Disposition,Accept-Ranges' always;
        
        # HLS specific headers
        add_header 'Cache-Control' 'no-cache' always;
        
        # Support for range requests
        add_header 'Accept-Ranges' 'bytes' always;
        
        # Disable caching for m3u8 files (manifest files)
        if ($request_uri ~* \.m3u8$) {
            expires -1;
            add_header 'Content-Type' 'application/vnd.apple.mpegurl' always;
        }
        
        # Enable caching for TS segments to improve playback performance
        if ($request_uri ~* \.ts$) {
            expires 1d;
            add_header 'Content-Type' 'video/mp2t' always;
        }
    }
    
    # Handle favicon requests
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }
    
    # Handle robots.txt requests
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }
    
    # Deny access to hidden files (starting with a dot)
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
} 